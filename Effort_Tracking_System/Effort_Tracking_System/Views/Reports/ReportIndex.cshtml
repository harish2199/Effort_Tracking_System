@model IEnumerable<Effort_Tracking_System.effort>
@{
    ViewBag.Title = "ReportIndex";
}

<div class="filters">
    <form method="get">
        @*@if (isAdmin) {
            <label for="userId">User:</label>
                        @Html.DropDownList("userId",ViewBag.Users as SelectList,"All")
                    }*@
        <label for="year">Year:</label>
        <select id="year" name="year">
            <option value="">All</option>
            <option value="2020">2020</option>
            <option value="2021">2021</option>
            <option value="2022">2022</option>
            <option value="2023">2023</option>
        </select>



        <label for="month">Month:</label>
        <select id="month" name="month">
            <option value="">All</option>
            <option value="1">January</option>
            <option value="2">February</option>
            <option value="3">March</option>
            <option value="4">April</option>
            <option value="5">May</option>
            <option value="6">June</option>
            <option value="7">July</option>
            <option value="8">August</option>
            <option value="9">September</option>
            <option value="10">October</option>
            <option value="11">November</option>
            <option value="12">December</option>
        </select>



        <label for="day">Day:</label>
        <select id="day" name="day">
            <option value="">All</option>
        </select>
        <button type="submit">Apply Filters</button>



        <div class="export-button">
            <a class="btn btn-primary btn-sm" href="@Url.Action("ReportIndex", "Reports", new { year = Request.QueryString["year"], month = Request.QueryString["month"], day = Request.QueryString["day"], export = "csv" })">Export to CSV/Excel</a>
        </div>
    </form>
</div>



<table class="table">
    <thead>
        <tr>
            @*@if (isAdmin)
                            {
                <th>User</th>
                            }*@
            <th>Date</th>
            <th>Project</th>
            <th>Task</th>
            <th>Shift</th>
            <th>Hours Worked</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {





            <tr>
                @*@if (isAdmin)
                                    {
                    <td>@item.user.first_name @item.user.last_name</td>
                                    }*@
                <td>@item.date_time.ToString("dd-MM-yyyy")</td>
                <td>@item.project.name</td>
                <td>@item.task.task_name</td>
                <td>@item.shift.start_time.ToString(@"hh\:mm") to @item.shift.end_time.ToString(@"hh\:mm")</td>
                <td>@item.hours_worked</td>
            </tr>
        }
    </tbody>
</table>



<script>
    const monthSelect = document.getElementById("month");
    const daySelect = document.getElementById("day");
    const yearSelect = document.getElementById("year");



    // Initialize the dropdowns based on the URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const yearParam = urlParams.get("year");
    const monthParam = urlParams.get("month");
    const dayParam = urlParams.get("day");



    if (yearParam) {
        yearSelect.value = yearParam;
    }



    if (monthParam) {
        monthSelect.value = monthParam;
        const selectedMonth = parseInt(monthSelect.value);
        updateDayOptions(selectedMonth, dayParam);
    }



    if (dayParam) {
        daySelect.value = dayParam;
    }



    monthSelect.addEventListener("change", () => {
        const selectedMonth = parseInt(monthSelect.value);
        updateDayOptions(selectedMonth, null); // Reset day dropdown
    });



    function updateDayOptions(selectedMonth, selectedDay) {
        const daysInMonth = getDaysInMonth(selectedMonth);



        const selectedDayInput = selectedDay ? selectedDay.toString() : daySelect.value;



        daySelect.innerHTML = "<option value=''>All</option>";
        for (let i = 1; i <= daysInMonth; i++) {
            daySelect.innerHTML += `<option value="${i}" ${(selectedDayInput === i.toString()) ? "selected" : ""}>${i}</option>`;
        }
    }



    function getDaysInMonth(month) {
        if ([1, 3, 5, 7, 8, 10, 12].includes(month)) {
            return 31;
        } else if ([4, 6, 9, 11].includes(month)) {
            return 30;
        } else if (month === 2) {
            const selectedYear = parseInt(yearSelect.value); // Use the selected year from the dropdown
            return isLeapYear(selectedYear) ? 29 : 28;
        }
        return 0;
    }



    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
    }</script>
@if (TempData["ExportMessage"] != null)
{
    <div class="export-message">
        @TempData["ExportMessage"]
    </div>
}